package games.dicemonastery.heuristics;

import core.AbstractGameState;
import core.AbstractPlayer;
import core.actions.AbstractAction;
import games.dicemonastery.DiceMonasteryGameState;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;

public class Advantage001 extends AbstractPlayer {

    Random rnd = new Random(System.currentTimeMillis());

    public static double RND_WEIGHT = 0.5;

    Map<Integer, Double> actionAdvantage = new HashMap<>();

    public Advantage001() {

        actionAdvantage.put(-12051179, 0.782988050126176);
        actionAdvantage.put(-2016553079, 0.641848832045281);
        actionAdvantage.put(-1153212376, 0.579399141466658);
        actionAdvantage.put(640694721, 0.50912620444719);
        actionAdvantage.put(-1489990695, 0.488841191111601);
        actionAdvantage.put(870037104, 0.478614368023475);
        actionAdvantage.put(-225521174, 0.328310933946286);
        actionAdvantage.put(1157740463, 0.291328992628993);
        actionAdvantage.put(-1554978260, 0.188332984514206);
        actionAdvantage.put(3094, 0.134880105374078);
        actionAdvantage.put(-1554978261, 0.0397865095827338);
        actionAdvantage.put(1724086432, 0.0120230963995101);
        actionAdvantage.put(-225521175, -0.0812105401938426);
        actionAdvantage.put(1556957245, -0.0877717554360664);
        actionAdvantage.put(238452555, -0.0888259511525796);
        actionAdvantage.put(1221556999, -0.0924492576115344);
        actionAdvantage.put(1221556937, -0.0928529763182384);
        actionAdvantage.put(-942379019, -0.101765187847979);
        actionAdvantage.put(1509514364, -0.112784233952424);
        actionAdvantage.put(1188392295, -0.112891058479457);
        actionAdvantage.put(1716392071, -0.122203764404902);
        actionAdvantage.put(-280415468, -0.124166349174141);
        actionAdvantage.put(671907029, -0.125493732767762);
        actionAdvantage.put(575593575, -0.132342975535573);
        actionAdvantage.put(-1918134964, -0.136201417759346);
        actionAdvantage.put(-942379020, -0.145627496154942);
        actionAdvantage.put(1509515449, -0.151445453419466);
        actionAdvantage.put(398321, -0.164913021834239);
        actionAdvantage.put(511834455, -0.168608145713075);
        actionAdvantage.put(1297686928, -0.17173959576424);
        actionAdvantage.put(1297686835, -0.173879135776989);
        actionAdvantage.put(1221556968, -0.182428710524457);
        actionAdvantage.put(1705930752, -0.187685910564679);
        actionAdvantage.put(1297686866, -0.189061847534064);
        actionAdvantage.put(1509515480, -0.193207206688074);
        actionAdvantage.put(992137803, -0.195128449075877);
        actionAdvantage.put(6, -0.196585205394191);
        actionAdvantage.put(62, -0.197790972633391);
        actionAdvantage.put(-1231443999, -0.20325);
        actionAdvantage.put(18213, -0.207105330912505);
        actionAdvantage.put(582925235, -0.219500631596435);
        actionAdvantage.put(3, -0.251738558876749);
        actionAdvantage.put(1297686897, -0.260836360074715);
        actionAdvantage.put(511834393, -0.280205077204461);
        actionAdvantage.put(1556957214, -0.280546353442005);
        actionAdvantage.put(-596922648, -0.286292671725601);
        actionAdvantage.put(511834424, -0.291212028908682);
        actionAdvantage.put(1556957183, -0.298126013741607);
        actionAdvantage.put(511834331, -0.309530245638334);
        actionAdvantage.put(177, -0.312792267886252);
        actionAdvantage.put(992137741, -0.314714148237127);
        actionAdvantage.put(-1688792581, -0.32149057693377);
        actionAdvantage.put(992137679, -0.3237729154265);
        actionAdvantage.put(511834362, -0.324957905672161);
        actionAdvantage.put(1509515325, -0.329396066854716);
        actionAdvantage.put(992137710, -0.333004133698384);
        actionAdvantage.put(1509515418, -0.339484429341862);
        actionAdvantage.put(236, -0.340389158805031);
        actionAdvantage.put(214074868, -0.350229626090616);
        actionAdvantage.put(201556483, -0.357051764137602);
        actionAdvantage.put(1705930690, -0.361697188683926);
        actionAdvantage.put(118, -0.365484813302376);
        actionAdvantage.put(-1329523947, -0.386812430735404);
        actionAdvantage.put(30243, -0.391490483774875);
        actionAdvantage.put(-288109829, -0.396363075810304);
        actionAdvantage.put(30913, -0.39952926005657);
        actionAdvantage.put(992137772, -0.401098497036943);
        actionAdvantage.put(121, -0.401510114168918);
        actionAdvantage.put(-1696486942, -0.406633456895078);
        actionAdvantage.put(246146916, -0.421728536983013);
        actionAdvantage.put(1767566644, -0.43183874361153);
        actionAdvantage.put(1509515387, -0.43244588061525);
        actionAdvantage.put(13919, -0.44122509397793);
        actionAdvantage.put(1705930721, -0.442070674802413);
        actionAdvantage.put(1705930783, -0.443583227796321);
        actionAdvantage.put(671907026, -0.446808377682882);
        actionAdvantage.put(651, -0.452706152973319);
        actionAdvantage.put(572, -0.453429142581281);
        actionAdvantage.put(730, -0.460540272108844);
        actionAdvantage.put(-1925829325, -0.469759165367618);
        actionAdvantage.put(1509515356, -0.469778121144559);
        actionAdvantage.put(671907027, -0.471385973726542);
        actionAdvantage.put(858461023, -0.480839196850394);
        actionAdvantage.put(289627128, -0.509636558405129);
        actionAdvantage.put(-1311818087, -0.518026130130464);
        actionAdvantage.put(-1886516373, -0.518108612298933);
        actionAdvantage.put(626405447, -0.518743484766277);
        actionAdvantage.put(-236935256, -0.519049754774075);
        actionAdvantage.put(-1311818085, -0.521298020076608);
        actionAdvantage.put(128213, -0.528006542271859);
        actionAdvantage.put(1556957090, -0.533083821483264);
        actionAdvantage.put(-1311818086, -0.551752220590612);
        actionAdvantage.put(493, -0.554666033601373);
        actionAdvantage.put(-448477382, -0.58059367471309);
        actionAdvantage.put(992137648, -0.584180587974434);
        actionAdvantage.put(-1311818088, -0.589028814164082);
        actionAdvantage.put(575230874, -0.591373514096618);
        actionAdvantage.put(-1676953787, -0.606813600893448);
        actionAdvantage.put(-448477384, -0.626525369303252);
        actionAdvantage.put(692683815, -0.637674578869356);
        actionAdvantage.put(-448477385, -0.638655995682341);
        actionAdvantage.put(-448477383, -0.646270261895586);
        actionAdvantage.put(2482, -0.65070972612551);
        actionAdvantage.put(1556957152, -0.650820853252817);
        actionAdvantage.put(692683813, -0.675151511708938);
        actionAdvantage.put(1705930659, -0.675600514771966);
        actionAdvantage.put(-1874654752, -0.684599075365995);
        actionAdvantage.put(692683812, -0.697768736929585);
        actionAdvantage.put(809, -0.702435178571429);
        actionAdvantage.put(692683814, -0.703931416003516);
        actionAdvantage.put(1556957121, -0.716840802164071);
        actionAdvantage.put(-1645312369, -0.719016834035189);
        actionAdvantage.put(858461021, -0.725498734407216);
        actionAdvantage.put(967765295, -0.727996163603884);
        actionAdvantage.put(1182320432, -0.744189510264883);
        actionAdvantage.put(65, -0.747533407205646);
        actionAdvantage.put(858461020, -0.752175698142616);
        actionAdvantage.put(333797721, -0.768975228344971);
        actionAdvantage.put(2097707489, -0.775375);
        actionAdvantage.put(450, -0.778018959044369);
        actionAdvantage.put(1734853116, -0.797672509104808);
        actionAdvantage.put(671907028, -0.814540298804781);
        actionAdvantage.put(-1473981365, -0.818213197038082);
        actionAdvantage.put(180, -0.819956098550725);
        actionAdvantage.put(295, -0.840631563636364);
        actionAdvantage.put(1705930628, -0.842434164525994);
        actionAdvantage.put(1574772096, -0.845030378671375);
        actionAdvantage.put(59, -0.849526144403444);
        actionAdvantage.put(333797722, -0.868839640191388);
        actionAdvantage.put(1574772097, -0.875338311445542);
        actionAdvantage.put(1574772098, -0.883496413829977);
        actionAdvantage.put(-1527453497, -0.885726659314465);
        actionAdvantage.put(1574772095, -0.913561708689221);
        actionAdvantage.put(-64045962, -0.928784721030043);
        actionAdvantage.put(-1473981366, -0.951913081167827);
        actionAdvantage.put(9, -0.963542840546035);
        actionAdvantage.put(-785255703, -0.983518188664845);
        actionAdvantage.put(-785255701, -1.03606224222612);
        actionAdvantage.put(-785255702, -1.04497568753188);
        actionAdvantage.put(1228, -1.05495828244202);
        actionAdvantage.put(839, -1.05560869868329);
        actionAdvantage.put(858461022, -1.05683212631841);
        actionAdvantage.put(-785255704, -1.09183580291747);
        actionAdvantage.put(354, -1.10085552845528);
        actionAdvantage.put(124, -1.15661848158267);
        actionAdvantage.put(1345429715, -1.17760903282188);
        actionAdvantage.put(1345429714, -1.23383242348467);
        actionAdvantage.put(1345429712, -1.26223280376881);
        actionAdvantage.put(1345429713, -1.26843760601125);
        actionAdvantage.put(2398734, -1.27229156547753);
        actionAdvantage.put(239, -1.30990398428291);
        actionAdvantage.put(1617, -1.32288076868862);
        actionAdvantage.put(-2054127287, -1.36358272727273);
        actionAdvantage.put(39307, -1.48213197853419);
        actionAdvantage.put(1829047466, -1.51036511995997);
        actionAdvantage.put(183, -1.55892794568432);
        actionAdvantage.put(298, -1.56476724363636);
        actionAdvantage.put(68, -1.61731877772244);
        actionAdvantage.put(-2002771307, -1.75971338521401);
        actionAdvantage.put(413, -1.79401310043668);
        actionAdvantage.put(0, -1.82011777098355);
        actionAdvantage.put(1829047465, -1.82397989544236);
        actionAdvantage.put(-2002771306, -1.89195428571429);
        actionAdvantage.put(-2054127286, -1.9383932423756);
        actionAdvantage.put(-2021811867, -2.13873752351841);
        actionAdvantage.put(-64045961, -2.17984643333333);
        actionAdvantage.put(127, -2.2067327645401);
        actionAdvantage.put(1551878344, -2.29727781954887);
        actionAdvantage.put(357, -2.30530707317073);
        actionAdvantage.put(2006, -2.35216636993121);
        actionAdvantage.put(12, -2.36418472591804);
        actionAdvantage.put(242, -2.48574446579194);
        actionAdvantage.put(537694684, -2.61463892720971);
        actionAdvantage.put(2395, -2.71086166073844);
        actionAdvantage.put(1917522137, -2.82625);
        actionAdvantage.put(186, -2.8312682860262);
        actionAdvantage.put(301, -2.84777401746725);
        actionAdvantage.put(71, -3.09180829800121);
        actionAdvantage.put(416, -3.36757456140351);
        actionAdvantage.put(360, -3.4669918699187);
        actionAdvantage.put(-886679665, -3.64632934782609);
        actionAdvantage.put(130, -3.8131631097561);
        actionAdvantage.put(245, -4.02168278529981);
        actionAdvantage.put(309934, -4.03127694204456);
        actionAdvantage.put(304, -4.34993632958802);
        actionAdvantage.put(650031938, -4.35799830463044);
        actionAdvantage.put(189, -4.92871473354232);
        actionAdvantage.put(419, -5.10214912280702);
        actionAdvantage.put(248, -5.59802228412256);
        actionAdvantage.put(307, -6.58889763779528);
        actionAdvantage.put(425, -8.63333333333333);
    }

    @Override
    public AbstractAction getAction(AbstractGameState gameState, List<AbstractAction> possibleActions) {

        DiceMonasteryGameState state = (DiceMonasteryGameState) gameState;

        double bestValue = Double.NEGATIVE_INFINITY;
        AbstractAction retValue = possibleActions.get(0);
        for (AbstractAction action : possibleActions) {
            double actionValue = actionAdvantage.getOrDefault(action.hashCode(), 0.0) + rnd.nextDouble() * RND_WEIGHT;
            if (actionValue > bestValue) {
                retValue = action;
                bestValue = actionValue;
            }
        }
        return retValue;
    }
}
